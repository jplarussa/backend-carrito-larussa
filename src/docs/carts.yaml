        "401":
          description: The cart or product are invalid
paths:
  /api/carts/:
    post:
      summary: Create a cart
      tags:
        - Carts
      responses:
        "200":
          description: Cart created successfully
        "400":
          description: Error creating the cart

  /api/carts/{cid}:
    get:
      summary: Get a Cart object based on an ID
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          description: ID of the cart to return
          required: true
          schema:          
            $type: String
      responses:
        "200":
          description: Cart found successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cart"
        "400":
          description: Error getting the requested cart
    put:
      tags:
        - Carts
      summary: Update a product based on an ID
      description: Update a Product object and return the status

      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                newValue:
                  type: string
                field:
                  type: string
              required:
                - newValue
                - field
      parameters:
        - name: pid
          in: path
          description: ID of the object to return
          required: true
          schema:
            $ref: "#/components/schemas/ObjectId"
          example: 6418d63d3e7632f846cc6a72
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cart"
        "400":
          description: Invalid ID supplied
        "404":
          description: Product not found
    delete:
      tags:
        - Carts
      summary: Delete a cart based on an ID
      description: Return the ID of the Product and an OK status
      parameters:
        - name: cid
          in: path
          description: ID of the object to return
          required: true
          schema:
            $ref: "#/components/schemas/ObjectId"
          example: 6418d63d3e7632f846cc6a72
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cart"
        "400":
          description: Invalid ID supplied
        "404":
          description: Cart not found
  /api/carts/{cid}/products/{pid}:
    put:
      tags:
        - Carts
      summary: Update a cart's product
      description: Update a product of the cart based on an ID
        and return the ID of the Product and an OK status
      parameters:
        - name: cid
          in: path
          description: ID of the cart to update
          required: true
          schema:
            $ref: "#/components/schemas/ObjectId"
          example: 6418d63d3e7632f846cc6a72
        - name: pid
          in: path
          description: ID of the product to update
          required: true
          schema:
            $ref: "#/components/schemas/ObjectId"
          example: 6418d63d3e7632f846cc6a72
    delete:
      tags:
        - Carts
      summary: Delete a product from the cart
      description: Delete a product from the cart based on an ID
        and return the ID of the Product and an OK status
      parameters:
        - name: cid
          in: path
          description: ID of the cart to update
          required: true
          schema:
            $ref: "#/components/schemas/ObjectId"
          example: 6418d63d3e7632f846cc6a72
        - name: pid
          in: path
          description: ID of the product to remove from the cart
          required: true
          schema:
            $ref: "#/components/schemas/ObjectId"
          example: 6418d63d3e7632f846cc6a72
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cart"
        "400":
          description: Invalid ID supplied
        "404":
          description: Cart not found
  /api/carts/{cid}/product:
    put:
      tags:
        - Carts
      summary: Delete a product from the cart based on an ID
      description: Return the ID of the Product and an OK status
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                product_id:
                  schema:
                    $ref: "#/components/schemas/ObjectId"
                  example:
                    $ref: "#/components/examples/productIdExample"
                quantity:
                  type: integer
              required:
                - product_id
                - quantity
      parameters:
        - name: cid
          in: path
          description: ID of the cart to purchase
          required: true
          schema:
            $ref: "#/components/schemas/ObjectId"
          example:
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cart"
        "400":
          description: Invalid ID supplied
        "404":
          description: Cart not found
  /api/carts/{cid}/purchase:
    post:
      tags:
        - Carts
      summary: Purchase the cart
      description: Update the cart based on an ID and a user's email,
        update the cart with the products that were not available
        and create an order for the available products
        (if the cart was completely available, it will be emptied)
      parameters:
        - name: cid
          in: path
          description: ID of the cart to update
          required: true
          schema:
            $ref: "#/components/schemas/ObjectId"
          example: 6418d63d3e7632f846cc6a72
      requestBody:
        required: true
        content:
          application/json:
            description: Email identifier of the user who owns the cart
            required: true
            schema:
              $ref: "#/components/schemas/Username"
            examples:
              usernameExample:
                $ref: "#/components/examples/usernameExample"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cart"
        "400":
          description: Missing parameters
        "409":
          description: Cart already empty
        "404":
          description: Cart not found

components:
  examples:
    cartIdExample:
      value:
        cid: 6418d63d3e7632f846cc6a72
    productIdExample:
      value:
        pid: 6418d63d3e7632f846cc6a72
    usernameExample:
      value:
        username: echutob90@gmail.com

  schemas:
    Username:
      type: string
      format: string
    ObjectId:
      type: ObjectId
      format: string
    Product:
      $ref: "#/components/schemas/Product"
    Cart:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Autogenerated ID by MongoDB
        products:
          type: array
          description: Array of products
          items:
            type: object
            properties:
              product:
                type: ObjectId
              quantity:
                type: integer
      example:
        _id: 647de6a6980a7859da8c1cb6,
        products:
          [
            {
              product:
                {
                  owner: admin,
                  _id: 6418d63d3e7632f846cc6a72,
                  title: product_test_1,
                  description: mocking product,
                  price: 25,
                  code: abc123,
                  available: true,
                  stock: 25,
                  category: others,
                  thumbnail: No image,
                  __v: 0,
                },
              quantity: 3,
              _id: 6487cf5cf071451c68cd26cf,
            },
          ]
